rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only access their own sessions
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // CRA-Copilot Tasks Collection Rules
    match /tasks/{taskId} {
      // Users can only access their own tasks
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      
      // Additional validation for task creation
      allow create: if request.auth != null && 
        request.resource.data.keys().hasAll(['task_id', 'user_id', 'task_type', 'status', 'created_at']) &&
        request.resource.data.task_id == taskId &&
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Agent Steps subcollection under tasks
    match /tasks/{taskId}/steps/{stepId} {
      // Users can only access steps of their own tasks
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/tasks/$(taskId)).data.user_id == request.auth.uid;
    }
    
    // Research Papers collection (shared, read-only for authenticated users)
    match /research_papers/{paperId} {
      allow read: if request.auth != null;
      // Only admin can write papers
      allow write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Knowledge System Collections
    
    // Vector chunks for semantic search
    match /vector_chunks/{chunkId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Knowledge graph entities
    match /knowledge_entities/{entityId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Knowledge graph relations
    match /knowledge_relations/{relationId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Document processing jobs
    match /processing_jobs/{jobId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}